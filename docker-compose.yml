version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: kanban_db
    env_file: .env.prod
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kanban_backend
    env_file: .env.prod
    working_dir: /app/Kanban
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - staticfiles:/app/Kanban/staticfiles
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn Kanban.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  nginx:
    image: nginx:alpine
    container_name: kanban_nginx
    ports:
      - "8001:8001"
    depends_on:
      - backend
    volumes:
      - staticfiles:/static
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  pgdata:
  staticfiles:
